#!/bin/bash 

<%
  def p_arr(property)
    p(property,nil) || []
  end

  role = p_arr('autoscaler.instancemetrics_db.roles').find { |role| role['tag'] == 'instancemetricsdb' or role['tag'] == 'default' }
  database = p_arr('autoscaler.instancemetrics_db.databases').find { |database| database['tag'] == 'instancemetricsdb' or database['tag'] == 'default' }
%>

export PATH=/var/vcap/packages/java/bin:$PATH 

require_consul='<%= p("autoscaler.metricscollector.require_consul") %>'

if [ $require_consul = 'true' ];then
	echo "start consul agent"
	# Starting consul agent on pre-start so that we can connect to a database url provided by consul dns
	source /var/vcap/packages/common/consul-helper.sh
	start_consul_agent
else
	echo "consul agent is not needed"
fi

HOST='<%= p("autoscaler.instancemetrics_db.address") %>'
DBNAME='<%= database['name'] %>'
USER='<%= role['name'] %>'
PASSWORD='<%= role['password'] %>'
PORT='<%= p("autoscaler.instancemetrics_db.port") %>'


java -cp "/var/vcap/packages/db/target/lib/*" liquibase.integration.commandline.Main --url jdbc:postgresql://$HOST:$PORT/$DBNAME --username=$USER --password=$PASSWORD \
--driver=org.postgresql.Driver --changeLogFile=/var/vcap/packages/metricscollector/metricscollector.db.changelog.yml update

